"use strict";Object.defineProperties(exports,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}});const c=require("./isString.cjs"),u=require("./isNumber.cjs"),a=require("./isNumberString.cjs"),m=require("./toMultiKeyOneValue.cjs"),r=require("./utils.cjs"),T=m.toMultiKeyOneValue([[["s","sec","second"],r.TS_UNIT.SECOND],[["m","min","minute"],r.TS_UNIT.MINUTE],[["h","hour"],r.TS_UNIT.HOUR],[["d","day"],r.TS_UNIT.DAY],[["w","week"],r.TS_UNIT.WEEK],[["y","year"],r.TS_UNIT.YEAR]]),S=/^(?<num>\d+(\.\d+)?)(?<unit>s(ec(ond)?)?|m(in(ute)?)?|h(our)?|d(ay)?|w(eek)?|y(ear)?)$/i,i=(e,o="millisecond")=>{if(!u.isNumber(e)&&!c.isString(e))return console.error(`"${e}" is not a number or string`),null;if(u.isNumber(e))return e;if(e=e.trim(),a.isNumberString(e))return Math.floor(+e);const t=e.match(S);if(!t)return console.error(`getTsByStr: Incorrect timestamp string parameter => "${e}"`),null;let{num:s,unit:l}=t.groups;const n=+s*T[l.toLowerCase()];return Math.floor(o==="second"?n/1e3:n)};exports.default=i;exports.getTsByStr=i;
